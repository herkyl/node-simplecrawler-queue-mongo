// Generated by CoffeeScript 1.9.0
(function() {
  var QueueItem;

  QueueItem = void 0;

  module.exports = function(connection, crawler) {
    var schema;
    schema = new connection.base.Schema({
      protocol: {
        type: String,
        required: true,
        index: true
      },
      host: {
        type: String,
        required: true,
        index: true
      },
      port: {
        type: Number,
        index: true
      },
      path: {
        type: String,
        required: true,
        index: true
      },
      status: {
        type: String,
        "default": 'queued',
        index: true,
        "enum": ['queued', 'spooled', 'fetched', 'redirected', 'error']
      },
      fetched: {
        type: Boolean,
        "default": false
      },
      stateData: {
        type: Object,
        "default": {}
      },
      crawler: {
        type: String,
        index: true,
        "default": 'default'
      }
    });
    schema.index({
      crawler: 1,
      status: 1
    });
    schema.virtual('url').get(function() {
      return this.protocol + '://' + this.host + (this.port ? ':' + this.port : void 0) + this.path;
    });
    if (QueueItem == null) {
      QueueItem = connection.model("QueueItem", schema);
    }
    return module.exports = QueueItem;
  };

}).call(this);
